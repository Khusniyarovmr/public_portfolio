И так.
Что мне ясно по аутентификации.
Сейчас у меня бэк при логине пользака устанавливает куки в браузер. В куках он хранит токен.
Я так понял, что раз куки установлены в браузере, то пользователя, который работает в данном браузере уже
не нужно проверять.
Читать куки из JS я не могу, потому что установлен параметр хттп онли.
получить эти куки из другого сайта я также не могу, что очень правильно.
Я могу сделать еще один токен, который я буду присылать в каждом запросе.
Это токен помимо ЖВТ для пущей безопасности

Похоже, что логика следующая:
Сервер получает запрос от клиента, сделанного из браузера на логин в системе.
Сервер обрабатывает запрос и если клиент такой есть и пароль подходит, то
он посылает ответ об успешной авторизации и в ответе же направляет куки.
Браузер эти куки обрабатывает и сохраняет у себя.
Следовательно при следующем запросе из этой же страницы, в теле запроса уже будут куки
которые браузер сохранил у себя, потому что это одни и теже блин куки.

И в дальнейшем при запросах я просто на стороне сервера буду ставить зависимость
на проверку аутентификации для запросов, которые требуют аутентификации клиента.
Что у меня по сути и есть уже. Так что в стейт клиента забирать токен необходимости нет. Или есть?


Так. Теперь у меня есть безопасное соединение клиента с бэком.
Пользователи могут регистрироваться и логиниться. Я могу получать данные о текущем пользователе.
Это значит, что пора делать дашборд.
Что нужно учесть?
Первое - это то, что к дашборду имеют доступ только пользователи с ролью два или более.
В дашборде слева будет навигационная панель, которая будет иметь такие вкладки как
управление стратегиями, аккаунт с настройками, статистика по прибыли.
Для этого нужно подготовтить бэк.
Для начала нужно завести наименование сигнала в таблицу сигналов и стратегий.
При создании стратегии, пользователь будет выбирать на основе каких сигналов
будет работать стратегия - по наименованию сигнала.
Также при создании стратегии будет учитываться символ и прочие настройки, которые мы заложили.
Надо продумать как будет выглядеть меню управления стратегиями.
Пример такой:
По кнопке создать новую стратегию будет вылезать меню с формой настройки стратегии.
Все созданные стратегии будут лежать списком в основном окне.
Также нужны елементы управления типа включить выключить всю торговлю
или только по определенному символу или чисто одну стратегию.
Типа нажимаешь на стратегию, она раскрывается вниз. В получившемся окошечке сверху инфа о настройке
стратегии, дальше статистика по стратегии, сколько открытых ордеров сколько прибыли\убытка и прочее.
А уже в меню статистики будет общая аналитика по портфелю от общего к частному.

Совсем забыл. Чтобы иметь возможность торговать, пользователю необходимо вставить свой бинанс ключ.
Для этого мне нужно подготовить и БЭК и ФРОНТ.

Вот он авторизовался, получил роль трейдера, зашел в дашборды, зашел в меню настройки аккаунта.
Дальше ему надо в первый раз завести в систему апи кей и апи секрет бинанса.

Про безопасность. Нужно сделать middleware на логин, чтобы проверялось сразу, вдруг пользак зашел с другого устройства
или с другого браузера или с другой страны. И если есть разница, то нужно присылать письмо с подтверждением.
Иначе не пускать. Письмо с проверкой делать довльно просто. Нужно нарисовать параметры к URL.
Сохранить в таблице инфу типа айди клиента - параметры отправленные в почте. И при клике на ссылку пользак
попадет на нужный эндпоинт, который сверит параметры, которые пришли от пользовака по ссылке с
параметрами в таблице и если все ок, то пропустит. Следовательно нужно сделать поле в таблице типа accept/declined
И вести белый список устройств пользователя. А еще надо будет эту таблицу кэшировать в редис, чтобы мидла была очень быстрая.
А еще видимо она должна улетать в отдельный поток. Хотя может и асинхронности тут хватит. надо смотреть

И так, дошли до самого интересного.
Теперь пользак может зайти на сайт, зарегистрироваться, авторизоваться и добавить binance api key.
Теперь можно реализовывать логику работы с бинансом.
Что должен уметь делать
1. Работа с ордерами: создать ордер, закрыть ордер, закрыть все ордера, инфа об открытых ордерах, история ордеров.
2. Работа со счетами: инфа о балансе.

При создании ордера должно происходить следующее:
Пользак настроил торговую стратегию.

По всей видимости, система, которая работает с бинансом должна быть отдельным процессом.
Мы на фронте заводим настройки, создаем стратегии и прочее, а система торговли - это считай
микросервис, который использует данные в БД, которые мы туда заводим через фронт и
исполняет команды. Делает проверки на статус торговли для клиента в целом, статусы по символам.
Записывать результаты в бд, вести логирование.

Тогда тут прям нужно продумать это все получше.
Считай, что система должна использовать все эти модели, которые созданы уже.


Итак, есть словарь с юзером и его стратегиями, которые должны быть запущены согласно сигналу.
Бинанс менеджер берет по очереди (пробуем синхронный вариант) юзера, берет из списка первую стратегию,
фомрирует объект с параметрами.
























